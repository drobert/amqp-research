<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-4.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">

	<context:property-placeholder />
	<import resource="amqp-context.xml" />

    <rabbit:queue id="queueClicksIn" name="${mq.queue.clicksIn.name:clicks_in}" />
    <rabbit:template id="amqpTemplate" connection-factory="amqpConnectionFactory" exchange="${mq.exchange.clicks.name:danielrobert.amqpresearch.clicks}" />
	
	<int:channel id="clicksIn">
		<int:interceptors>
			<int:wire-tap channel="errorLogger" />
		</int:interceptors>	
	</int:channel>
	
	<int:channel id="clicksOut">
		<int:interceptors>
			<int:wire-tap channel="errorLogger" />
		</int:interceptors>	
	</int:channel>
	
	<int:logging-channel-adapter id="errorLogger" level="INFO" logger-name="STDERR" />
	
	<!-- acts as both a Filter and a Transformer -->
	<bean id="clickHandler" class="name.danielrobert.amqp.NinetiesClickHandler" />

	<int-amqp:inbound-channel-adapter id="incomingClick" channel="clicksIn" queue-names="${mq.queue.clicksIn.name:clicks_in}" connection-factory="amqpConnectionFactory" />
	
	<int:chain id="incomingClicksChain" input-channel="clicksIn" output-channel="clicksOut">
		<!-- 'id' will actually be prepended by chain id when nested" -->
		<int:filter ref="clickHandler" method="isAClick" />
		<int:transformer ref="clickHandler" method="processClick" />
	</int:chain>
	
	<int:chain id="outgoingClicksChain" input-channel="clicksOut">
		<int:transformer ref="clickHandler" method="tagClick" />
		<!-- TODO: find a way to use dynamic routing keys by environment and/or partner name/id -->
		<int-amqp:outbound-channel-adapter amqp-template="amqpTemplate" routing-key="${mq.clicks.out.routingKey:click.billable}"  />	
	</int:chain>
	

</beans>
